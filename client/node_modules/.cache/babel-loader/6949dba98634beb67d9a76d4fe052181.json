{"ast":null,"code":"var _jsxFileName = \"/Users/mubashirkhan/Documents/Fuel-Rate-Predictor-Web-Portal/client/src/components/auth/RegisterModal.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport AuthService from '../../Services/AuthService';\nimport Message from '../Message';\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, NavLink } from 'reactstrap';\n\nconst RegisterModal = props => {\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [message, setMessage] = useState(null);\n  let timerID = useRef(null);\n  useEffect(() => {\n    return () => {\n      clearTimeout(timerID);\n    };\n  }, []);\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const onChange = e => {\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const resetForm = () => {\n    setUser({\n      username: \"\",\n      password: \"\"\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    AuthService.register(user).then(data => {\n      const {\n        message\n      } = data;\n      setMessage(message);\n      resetForm();\n\n      if (!message.msgError) {\n        timerID = setTimeout(() => {\n          //If no error, then close the modal\n          if (modal) {\n            toggle();\n          }\n        }, 1000);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 16\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"Username\",\n    required: true,\n    minLength: \"7\",\n    className: \"mb-3\",\n    value: user.username,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    for: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    required: true,\n    minLength: \"7\",\n    className: \"mb-3\",\n    value: user.password,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"dark\",\n    style: {\n      marginTop: '2rem'\n    },\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 33\n    }\n  }, \"Register\"))), message ? /*#__PURE__*/React.createElement(Message, {\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 36\n    }\n  }) : null)));\n};\n\nexport default RegisterModal;","map":{"version":3,"sources":["/Users/mubashirkhan/Documents/Fuel-Rate-Predictor-Web-Portal/client/src/components/auth/RegisterModal.js"],"names":["React","useState","useRef","useEffect","AuthService","Message","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","NavLink","RegisterModal","props","user","setUser","username","password","message","setMessage","timerID","clearTimeout","modal","setModal","toggle","onChange","e","target","name","value","resetForm","onSubmit","preventDefault","register","then","data","msgError","setTimeout","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useRef,useEffect } from 'react';\nimport AuthService from '../../Services/AuthService';\nimport Message from '../Message';\n\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form, \n    FormGroup,\n    Label, \n    Input,\n    NavLink,\n} from 'reactstrap';\n\nconst RegisterModal = (props) => {\n\n    const [user,setUser] = useState({username: \"\", password : \"\"});\n    const [message,setMessage] = useState(null);\n    let timerID = useRef(null);\n\n    useEffect(()=>{\n        return ()=>{\n            clearTimeout(timerID);\n        }\n    },[]);\n\n    const [modal, setModal] = useState(false);\n\n    const toggle = () => setModal(!modal);\n\n    const onChange = e => {\n        setUser({...user,[e.target.name] : e.target.value})\n    }\n\n    const resetForm = ()=>{\n        setUser({username : \"\", password : \"\"});\n    }\n    \n    const onSubmit = e =>{\n        e.preventDefault();\n        AuthService.register(user).then(data=>{\n            const { message } = data;\n            setMessage(message);\n            resetForm();\n            if(!message.msgError){\n                timerID = setTimeout(()=>{\n                    //If no error, then close the modal\n                    if(modal){\n                        toggle();\n                    }    \n                },1000)\n            }\n        })\n    }\n\n\n        return (\n            <div>\n               <NavLink onClick={toggle}>Register</NavLink>\n\n                <Modal isOpen={modal} toggle={toggle}>\n                    <ModalHeader toggle ={toggle}>Register</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit= {onSubmit}>\n                            <FormGroup>\n                                <Label for=\"username\">Username</Label>\n                                <Input \n                                    type = \"text\"\n                                    name = \"username\"\n                                    placeholder=\"Username\"\n                                    required\n                                    minLength = \"7\"\n                                    className = \"mb-3\"\n                                    value={user.username}\n                                    onChange = {onChange}\n                                    \n                                />\n\n                                <Label for=\"password\">Password</Label>\n                                <Input \n                                    type=\"password\"\n                                    name = \"password\"\n                                    placeholder=\"Password\"\n                                    required\n                                    minLength = \"7\"\n                                    className = \"mb-3\"\n                                    value={user.password} \n                                    onChange = {onChange}\n                                />\n                            \n                                <Button type='submit' color='dark' style= {{marginTop: '2rem'}} block>\n                                    Register\n                                </Button> \n                            </FormGroup>\n                        </Form>\n                        {message ? <Message message={message}/> : null}\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n}\n\nexport default RegisterModal;"]},"metadata":{},"sourceType":"module"}