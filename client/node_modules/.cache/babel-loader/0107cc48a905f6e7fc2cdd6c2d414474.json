{"ast":null,"code":"var _jsxFileName = \"/Users/mubashirkhan/Documents/Fuel-Rate-Predictor-Web-Portal/client/src/components/auth/RegisterModal.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ProptTypes from 'prop-types';\nimport { register } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, NavLink, Alert } from 'reactstrap';\nimport axios from 'axios';\n\nclass RegisterModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      username: '',\n      password: '',\n      msg: null\n    };\n\n    this.toggle = () => {\n      //clear errors\n      //this.props.clearErrors();\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const newUser = this.state; // const newUser ={\n      //     username: this.state.username,\n      //     password: this.state.password\n      // };\n\n      /*const user{ username, password } = this.state;\n      //create user obj\n      const newUser = {\n         username, \n         password\n      }*/\n\n      console.log(newUser);\n      axios.post('localhost:3000/user/add/', newUser).then(res => console.log(res.data));\n      this.setState({}); //this.props.register(newUser);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      onClick: this.toggle,\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 16\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, this.state.msg ? /*#__PURE__*/React.createElement(Alert, {\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, this.state.msg) : null, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Username\",\n      className: \"mb-3\",\n      onChange: this.OnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      className: \"mb-3\",\n      onChange: this.OnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginTop: '2rem'\n      },\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 33\n      }\n    }, \"Register\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  register,\n  clearErrors\n})(RegisterModal);","map":{"version":3,"sources":["/Users/mubashirkhan/Documents/Fuel-Rate-Predictor-Web-Portal/client/src/components/auth/RegisterModal.js"],"names":["React","Component","connect","ProptTypes","register","clearErrors","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","NavLink","Alert","axios","RegisterModal","state","modal","username","password","msg","toggle","setState","onChange","e","target","name","value","onSubmit","preventDefault","newUser","console","log","post","then","res","data","render","OnChange","marginTop","mapStateToProps","isAuthenticated","auth","error"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ProptTypes from 'prop-types';\nimport { register } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions'\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form, \n    FormGroup,\n    Label, \n    Input,\n    NavLink,\n    Alert\n} from 'reactstrap';\nimport axios from 'axios'\n\nclass RegisterModal extends Component {\n    state = {\n        modal: false,\n        username: '',\n        password: '',\n        msg: null\n    }\n\n    // static ProptTypes = {\n    //     isAuthenticated: ProptTypes.bool,\n    //     error: ProptTypes.object.isRequired,\n    //     register: ProptTypes.func.isRequired,\n    //     clearErrors : ProptTypes.func.isRequired\n    // }\n\n    // componentDidUpdate(pervProps){\n    //     const { error, isAuthenticated } = this.props;\n    //     if(error !== pervProps.error){\n    //         //check for register error\n    //         if(error.id === 'REGISTER_FAIL'){\n    //             this.setState({msg: error.msg.msg})\n    //         } else {\n    //             this.setState({msg: null});\n    //         }\n    //     }\n\n    //     //close modal, if authenticated\n    //     if(this.state.modal){\n    //         if(isAuthenticated){\n    //             this.toggle();\n    //         }\n    //     }\n    // }\n\n\n    toggle = () => {\n        //clear errors\n        //this.props.clearErrors();\n        this.setState( {\n            modal: !this.state.modal\n        });\n    }\n\n    onChange = e => {\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n\n        const newUser = this.state\n\n        // const newUser ={\n        //     username: this.state.username,\n        //     password: this.state.password\n            \n        // };\n        /*const user{ username, password } = this.state;\n        //create user obj\n        const newUser = {\n           username, \n           password\n        }*/\n\n\n        console.log(newUser)\n\n        axios.post('localhost:3000/user/add/', newUser)\n            .then(res => console.log(res.data))\n\n        this.setState({\n\n        })\n        \n\n        //this.props.register(newUser);\n    }\n    \n    render(){\n        return (\n            <div>\n               <NavLink onClick={this.toggle} href =\"#\">Register</NavLink>\n\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\n                    <ModalHeader toggle ={this.toggle}>Register</ModalHeader>\n                    <ModalBody>\n                    { this.state.msg ? (\n                    <Alert color='danger'>{this.state.msg}</Alert>\n                    ) : null}\n                        <Form onSubmit= {this.onSubmit}>\n                            <FormGroup>\n                                <Label for=\"username\">Username</Label>\n                                <Input \n                                    type=\"text\"\n                                    name = \"username\"\n                                    placeholder=\"Username\"\n                                    className = \"mb-3\"\n                                    onChange = {this.OnChange}\n                                />\n\n                                <Label for=\"password\">Password</Label>\n                                <Input \n                                    type=\"password\"\n                                    name = \"password\"\n                                    placeholder=\"Password\"\n                                    className = \"mb-3\"\n                                    onChange = {this.OnChange}\n                                />\n                            \n                                <Button color='dark' style= {{marginTop: '2rem'}} block>\n                                    Register\n                                </Button> \n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n})\n\nexport default connect(\n    mapStateToProps,\n    { register, clearErrors }\n)(RegisterModal);"]},"metadata":{},"sourceType":"module"}